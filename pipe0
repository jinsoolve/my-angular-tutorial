private waitForScrollEnd(callback: () => void, timeout = 500): void {
  let lastScrollY = window.scrollY;
  let sameCount = 0;
  const threshold = 3;

  const check = () => {
    const currentY = window.scrollY;

    if (Math.abs(currentY - lastScrollY) < 2) {
      sameCount++;
    } else {
      sameCount = 0;
    }

    lastScrollY = currentY;

    if (sameCount >= threshold) {
      callback();
    } else {
      requestAnimationFrame(check);
    }
  };

  requestAnimationFrame(check);
}

public doFocus(item: SearchItem): void {
  const selector = `unit-${item.id}`;

  this.router.navigate([item.route], { fragment: item.id }).then(() => {
    this.waitForElement(selector)
      .then((el) => {
        this.scrollToUnit(el);

        // 💡 스크롤이 끝나고 나서 highlight 실행
        this.waitForScrollEnd(() => {
          this.highlightBlink(el);
        });
      })
      .catch((err) => console.warn(`[doFocus] ${selector} not found:`, err));
  });
}